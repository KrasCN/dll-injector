name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.21'

jobs:
  build:
    name: Build
    runs-on: windows-latest
    strategy:
      matrix:
        goarch: [amd64, 386]
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build ${{ matrix.goarch }}
      env:
        GOOS: windows
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 1
      run: |
        if ("${{ matrix.goarch }}" -eq "386") {
          go build -o dll-injector-x86.exe ./cmd/injector
        } else {
          go build -o dll-injector-x64.exe ./cmd/injector
        }

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dll-injector-${{ matrix.goarch }}
        path: dll-injector*.exe

  release:
    name: Create Release
    runs-on: windows-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Build release binaries
      env:
        GOOS: windows
        CGO_ENABLED: 1
      run: |
        # Build x64
        $env:GOARCH = "amd64"
        go build -o dll-injector-x64.exe ./cmd/injector
        
        # Build x86
        $env:GOARCH = "386"
        go build -o dll-injector-x86.exe ./cmd/injector

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dll-injector-x64.exe
          dll-injector-x86.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
